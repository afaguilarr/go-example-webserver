# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    machine: true
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Build Containers"
          command: |
            cp .env.ci .env
            docker-compose build

  lint:
    machine: true
    steps:
      - run:
          name: "Go Vet"
          command: "docker-compose run go_builder sh bin/go_vet.sh"
      - run:
          name: "Format Go Code"
          command: "docker-compose run go_builder sh bin/go_fmt.sh"
      - run:
          name: "Go Static Check"
          command: "docker-compose run go_builder sh bin/staticcheck.sh"
      - run:
          name: "Lint Python Code"
          command: "docker-compose run python_tests sh bin/pylint.sh"

  unit-test:
    machine: true
    steps:
      - run:
          name: "Run unit tests"
          command: docker-compose run go_builder sh bin/go_test.sh
      - store_artifacts:
          path: app/src/report/coverage.html
          destination: coverage.html

  spin-up:
    machine: true
    steps:
      - run:
          name: "Spin up Containers"
          command: "docker-compose up -d" # Detached to avoid that this step is run an indefinite amount of time
      - run:
          name: "Set up DB"
          command: "docker-compose run webserver sh bin/goose_apply_migrations.sh admin admin"

  hello-world-functional-tests:
    machine: true
    steps:
      - run:
          name: "Run functional tests"
          command: |
            mkdir test/report
            mkdir test/report/xml_results
            docker-compose run python_tests pytest --junitxml=report/xml_results/junit.xml
      - store_test_results:
          path: test/report/xml_results
      - store_artifacts:
          path: test/report/pytest_html_report.html
          destination: pytest_html_report.html

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-and-test-workflow:
    jobs:
      - build
      - lint:
        requires:
          - build
      - unit-test:
        requires:
          - build
      - spin-up:
        requires:
          - build
      - hello-world-functional-tests:
        requires:
          - spin-up
