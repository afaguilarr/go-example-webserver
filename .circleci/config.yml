# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    machine: true
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Build Containers"
          command: |
            cp .env.ci .env
            docker-compose build
      # Steps necessary to persist the images between jobs
      # https://circleci.com/docs/workspaces/
      # https://support.circleci.com/hc/en-us/articles/360019182513-Build-a-Docker-image-in-one-job-and-use-it-in-another-job
      - run:
          name: "Create workspace"
          command: mkdir -p /workspace
      - run:
          name: "Persist go_builder image"
          command: docker save -o /workspace/go_builder go_builder
      - run:
          name: "Persist go_webserver image"
          command: docker save -o /workspace/go_webserver go_webserver
      - run:
          name: "Persist go_crypto image"
          command: docker save -o /workspace/go_crypto go_crypto
      - run:
          name: "Persist python_tests image"
          command: docker save -o /workspace/python_tests python_tests
      - run:
          name: "Persist nginx_custom image"
          command: docker save -o /workspace/nginx_custom nginx_custom
      - persist_to_workspace:
          root: /workspace
          paths:
            - go_builder
            - go_webserver
            - go_crypto
            - python_tests
            - nginx_custom

  lint:
    machine: true
    steps:
      # Steps necessary to persist the images between jobs
      # https://circleci.com/docs/workspaces/
      # https://support.circleci.com/hc/en-us/articles/360019182513-Build-a-Docker-image-in-one-job-and-use-it-in-another-job
      - attach_workspace:
          at: /workspace
      - run:
          name: "Load go_builder image"
          command: "docker load -i /workspace/go_builder"
      - run:
          name: "Load python_tests image"
          command: "docker load -i /workspace/python_tests"
      - checkout
      - run:
          name: "Go Vet"
          command: "docker-compose run go_builder sh bin/go_vet.sh"
      - run:
          name: "Format Go Code"
          command: "docker-compose run go_builder sh bin/go_fmt.sh"
      - run:
          name: "Go Static Check"
          command: "docker-compose run go_builder sh bin/staticcheck.sh"
      - run:
          name: "Lint Python Code"
          command: "docker-compose run python_tests sh bin/pylint.sh"

  unit-test:
    machine: true
    steps:
      - attach_workspace:
          at: /workspace
      - run:
          name: "Load go_builder image"
          command: "docker load -i /workspace/go_builder"
      - checkout
      - run:
          name: "Run unit tests"
          command: docker-compose run go_builder sh bin/go_test.sh
      - store_artifacts:
          path: app/src/report/coverage.html
          destination: coverage.html

  functional-tests:
    machine: true
    steps:
      - attach_workspace:
          at: /workspace
      - run:
          name: "Load go_builder image"
          command: "docker load -i /workspace/go_builder"
      - run:
          name: "Load python_tests image"
          command: "docker load -i /workspace/python_tests"
      - run:
          name: "Load go_webserver image"
          command: "docker load -i /workspace/go_webserver"
      - run:
          name: "Load go_crypto image"
          command: "docker load -i /workspace/go_crypto"
      - run:
          name: "Load nginx_custom image"
          command: "docker load -i /workspace/nginx_custom"
      - checkout
      - run:
          name: "Spin up Containers"
          command: "docker-compose up -d" # Detached to avoid that this step is run an indefinite amount of time
      - run:
          name: "Set up DB"
          command: "docker-compose run webserver sh bin/goose_apply_migrations.sh admin admin"
      - run:
          name: "Run functional tests"
          command: |
            mkdir test/report
            mkdir test/report/xml_results
            docker-compose run python_tests pytest --junitxml=report/xml_results/junit.xml
      - store_test_results:
          path: test/report/xml_results
      - store_artifacts:
          path: test/report/pytest_html_report.html
          destination: pytest_html_report.html

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-and-test-workflow:
    jobs:
      - "build"
      - "lint":
          requires:
              - build
      - "unit-test":
          requires:
              - build
      - "functional-tests":
          requires:
              - build
